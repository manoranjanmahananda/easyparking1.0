package com.easyparking.entity;


import java.io.Serializable;
import java.util.Collections;
import java.util.Date;
import java.util.Map;
import java.util.WeakHashMap;

import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import org.hibernate.proxy.HibernateProxy;


/** 
 * Object mapping for hibernate-handled table: parking_lot.
 * @author autogenerated
 */

@NamedQueries({ 
	@NamedQuery(name = "ParkingLot.findByOwnerId", query = "Select pl from ParkingLot pl where pl.ownerId = :ownerId and pl.status = 1")
})


@Entity
@Table(name = "parking_lot")
public class ParkingLot extends BaseEntity<Integer> implements  Serializable {

	/** Serial Version UID. */
	private static final long serialVersionUID = -558968827L;
	
	@Id
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	private Integer id = 0;
	
	@Column(name="altitude")
	private String altitude;
	
	@Column(name="available_count")
	private Integer availableCount;
	
	@Temporal( TemporalType.TIMESTAMP)
	@Column(name="created_at")
	private Date createdAt;
	
	@Column(name="created_by")
	private String createdBy;
	
	@Column(name="longitude")
	private String longitude;
	
	@Column(name="name")
	private String name;
	
	@Column(name="owner_id")
	private Integer ownerId;
	
	@Column(name="pick_rate")
	private Integer pickRate;
	
	@Column(name="pick_time")
	private Date pickTime;
	
	@Column(name="pick_time_end")
	private Date pickTimeEnd;
	
	public Date getPickTimeEnd() {
		return pickTimeEnd;
	}

	public void setPickTimeEnd(Date pickTimeEnd) {
		this.pickTimeEnd = pickTimeEnd;
	}

	@Column(name="regular_rate")
	private Integer regularRate;
	
	@Column(name="total_count")
	private Integer totalCount;
	
	@Temporal( TemporalType.TIMESTAMP)
	@Column(name="updated_at")
	private Date updatedAt;
	
	@Column(name="updated_by")
	private String updatedBy;

	@Column(name="status")
	private Integer status;

	public Integer getStatus() {
		return status;
	}

	public void setStatus(Integer status) {
		this.status = status;
	}

	public Integer getId() {
		return id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	public String getAltitude() {
		return altitude;
	}

	public void setAltitude(String altitude) {
		this.altitude = altitude;
	}

	public Integer getAvailableCount() {
		return availableCount;
	}

	public void setAvailableCount(Integer availableCount) {
		this.availableCount = availableCount;
	}

	public Date getCreatedAt() {
		return createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

	public String getCreatedBy() {
		return createdBy;
	}

	public void setCreatedBy(String createdBy) {
		this.createdBy = createdBy;
	}

	public String getLongitude() {
		return longitude;
	}

	public void setLongitude(String longitude) {
		this.longitude = longitude;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public Integer getOwnerId() {
		return ownerId;
	}

	public void setOwnerId(Integer ownerId) {
		this.ownerId = ownerId;
	}

	public Integer getPickRate() {
		return pickRate;
	}

	public void setPickRate(Integer pickRate) {
		this.pickRate = pickRate;
	}

	public Date getPickTime() {
		return pickTime;
	}

	public void setPickTime(Date pickTime) {
		this.pickTime = pickTime;
	}

	public Integer getRegularRate() {
		return regularRate;
	}

	public void setRegularRate(Integer regularRate) {
		this.regularRate = regularRate;
	}

	public Integer getTotalCount() {
		return totalCount;
	}

	public void setTotalCount(Integer totalCount) {
		this.totalCount = totalCount;
	}

	public Date getUpdatedAt() {
		return updatedAt;
	}

	public void setUpdatedAt(Date updatedAt) {
		this.updatedAt = updatedAt;
	}

	public String getUpdatedBy() {
		return updatedBy;
	}

	public void setUpdatedBy(String updatedBy) {
		this.updatedBy = updatedBy;
	}



	
}
